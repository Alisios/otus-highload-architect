version: '4'
networks:
  my-network:
    driver: bridge

volumes:
  postgres-data:

services:
  app:
    build:
      context: .
      dockerfile: social-network/Dockerfile
    privileged: true
    ports:
      - 18080:8080
    expose:
      - 18080
    environment:
      TZ: 'Europe/Moscow'
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/social-network?currentSchema=social_network
      SPRING_DATASOURCE_USERNAME: alisa
      SPRING_DATASOURCE_PASSWORD: password1
      SPRING_REDIS_HOST: redis
      REDIS_HOST: redis
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    container_name: db
    image: postgres:12
    environment:
      TZ: 'Europe/Moscow'
      POSTGRES_USER: alisa
      POSTGRES_PASSWORD: password1
      POSTGRES_DB: social-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d customdatabase" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    expose:
      - 5432
    restart: unless-stopped


  redis:
    container_name: redis-cache
    image: redis:7
    ports:
      - "6379:6379"
    #    volumes:
    #      - ./redis/data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
