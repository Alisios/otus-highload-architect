#version: '4'
networks:
  my-network:
    driver: bridge

volumes:
  postgres-data:
  healthcheck-volume:

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    ports:
      - "18080-18095:8080"
    environment:
      TZ: 'Europe/Moscow'
      SPRING_DATASOURCE_URL: jdbc:postgresql://pg-master:5432/social-network?currentSchema=social_network
      SPRING_DATASOURCE_USERNAME: alisa
      SPRING_DATASOURCE_PASSWORD: password1
      SPRING_REDIS_HOST: redis
      REDIS_HOST: redis
      APP_RABBIT_MQ_HOST: rabbitmq
    restart: always
    depends_on:
      pg-master:
        condition: service_healthy
      redis:
        condition: service_healthy

  pg-master:
    container_name: "citus_master"
    image: "citusdata/citus:11.2.0"
    ports:
      - "5432:5432"
    labels: [ "com.citusdata.role=Master" ]
    environment: &AUTH
      POSTGRES_USER: "alisa"
      POSTGRES_PASSWORD: "password1"
      POSTGRES_DB: social-network
      PGUSER: "alisa"
      PGPASSWORD: "password1"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      CITUS_HOST: "pg-master"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U alisa -d social-network" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pg-worker:
    image: "citusdata/citus:11.2.0"
    labels: [ "com.citusdata.role=Worker" ]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    depends_on:
      pg-manager:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U alisa -d social-network" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - healthcheck-volume:/healthcheck

  pg-manager:
    container_name: "citus_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
#      - postgres-data:/var/lib/postgresql/data
    depends_on:
      pg-master:
        condition: service_healthy
    environment: *AUTH

  redis:
    container_name: redis-cache
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbit-mq
    environment:
      POSTGRES_USER: "alisa"
    ports:
      - 61613:61613
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbit_enable_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbitmq/data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 5s
      timeout: 5s
      retries: 10
